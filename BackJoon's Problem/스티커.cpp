//문제 9465 스티커
//상근이의 여동생 상냥이는 문방구에서 스티커 2n개를 구매했다.
//스티커는 그림 (a)와 같이 2행 n열로 배치되어 있다. 상냥이는 스티커를 이용해 책상을 꾸미려고 한다.
//
//상냥이가 구매한 스티커의 품질은 매우 좋지 않다. 스티커 한 장을 떼면
//, 그 스티커와 변을 공유하는 스티커는 모두 찢어져서 사용할 수 없게 된다
//. 즉, 뗀 스티커의 왼쪽, 오른쪽, 위, 아래에 있는 스티커는 사용할 수 없게 된다.
//
//모든 스티커를 붙일 수 없게된 상냥이는 각 스티커에 점수를 매기고,
//        점수의 합이 최대가 되게 스티커를 떼어내려고 한다. 먼저,
//그림 (b)와 같이 각 스티커에 점수를 매겼다. 상냥이가 뗄 수 있는 스티커의 점수의 최대값을 구하는 프로그램을 작성하시오. 즉, 2n개의 스티커 중에서 점수의 합이 최대가 되면서 서로 변을 공유 하지 않는 스티커 집합을 구해야 한다.
//
//위의 그림의 경우에 점수가 50, 50, 100, 60인 스티커를 고르면,
//        점수는 260이 되고 이 것이 최대 점수이다. 가장 높은 점수를
//        가지는 두 스티커 (100과 70)은 변을 공유하기 때문에, 동시에 뗄 수 없다.
#include<iostream>
using namespace std;

int Max(int a,int b)
{
    if(a>b)
        return a;
    else return b;
}
//앞에줄의 위에꺼 고른경우, 앞에줄의 밑에꺼 고른경우, 앞에줄거 둘다 안 고른 경우
//뒷줄의 위에꺼 선택가능한 경우(앞줄의 밑에꺼 고른경우, 앞줄에서 안고른 경우), 뒷줄의 아랫거 선택가능 한경우
//(앞줄의 위에거 고른경우, 앞줄에서 안고른 경우)
//뒤뒷줄로 갔을때

int DP[3][100003];
//DP[0][i]..에서 0은 i줄에서 선택안한경우 1은 위에거 2는 아랫거 선택한 경우.<<0번 인덱스 부터 시작.하겟음
int main()
{
    int n;
    int N;
    int ***Arr;
    cin>>n;
    for(int i=0;i<n;i++) {
        cin >> N;

        Arr=new int**[n];
        Arr[i]=new int*[2];

        Arr[i][0]=new int[N];
        Arr[i][1]=new int[N];

        for(int j=0;j<2;j++)
            for(int k=0;k<N;k++)
                cin>>Arr[i][j][k];

        DP[0][0]=0;
        DP[1][0]=Arr[i][0][0];
        DP[2][0]=Arr[i][1][0];

        for(int q=1;q<N;q++)
        {
            DP[0][q]=Max(DP[1][q-1],DP[2][q-1]);
            DP[1][q]=Max(DP[0][q-1]+Arr[i][0][q],DP[2][q-1]+Arr[i][0][q]);
            DP[2][q]=Max(DP[0][q-1]+Arr[i][1][q],DP[1][q-1]+Arr[i][1][q]);
        }

        int max=-10000;
        for(int i=0;i<3;i++)
            if(DP[i][N-1]>max)
                max=DP[i][N-1];

        cout<<max<<endl;

    }
    return 0;

}