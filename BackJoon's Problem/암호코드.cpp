//문제 2011 암호코드
//상근이와 선영이가 다른 사람들이 남매간의 대화를 듣는 것을 방지하기 위해서 대화를 서로 암호화 하기로 했다.
// 그래서 다음과 같은 대화를 했다.
//
//상근: 그냥 간단히 암호화 하자. A를 1이라고 하고, B는 2로, 그리고 Z는 26으로 하는거야.
//선영: 그럼 안돼. 만약, "BEAN"을 암호화하면 25114가 나오는데, 이걸 다시 글자로 바꾸는 방법은 여러가지가 있어.
//상근: 그렇네. 25114를 다시 영어로 바꾸면, "BEAAD", "YAAD", "YAN", "YKD", "BEKD", "BEAN" 총
// 6가지가 나오는데, BEAN이 맞는 단어라는건 쉽게 알수 있잖아?
//선영: 예가 적절하지 않았네 ㅠㅠ 만약 내가 500자리 글자를 암호화 했다고 해봐. 그 때는 나올 수 있는 해석이
// 정말 많은데, 그걸 언제 다해봐?
//상근: 얼마나 많은데?
//선영: 구해보자!
//어떤 암호가 주어졌을 때, 그 암호의 해석이 몇 가지가 나올 수 있는지 구하는 프로그램을 작성하시오.

// A = 1, B = 2, C = 3, D = 4, ......Z = 26.
// 1~26 까지.
// DP[n] : n번째 까지의 경우의 수.
// 1. 앞자리가 1로 끝나는 경우.
//    - DP[n]=DP[n-2]+DP[n-1]
// 2. 앞자리가 2로 끝나는 경우.
//    - 뒷자리가 1~6 일때 경우 -> DP[n] = DP[n-2] + DP[n-1]
//    - 뒷자리 > 6 일 경우 ->   DP[n] = DP[n-1];
// 3. 앞자리 > 2 일 경우 DP[n]=DP[n-1];
#include<iostream>
using namespace std;

long DP[5003];


int main()
{
    string str;
    cin>>str;


    int idx = str.length();
    int Buffer[idx+1];

    for(int i=0;i<idx;i++)
        Buffer[i+1]=str.at(i)-'0';

    DP[0]=1;
    DP[1]=1;

    for(int i=1;i<=idx;i++)
    {

        if(Buffer[i]==0) {
            if(i==1)
            {DP[idx] = 0;
            break;}
        }

        if(i>1)
        {

            if(Buffer[i]==0) {
                if(Buffer[i-1]>=3)
                {DP[idx]=0;
                    break;}
                else {
                    DP[i]=DP[i-2]%1000000;
                }
            }
            else{
            if(Buffer[i-1]==1)
        {
            DP[i]=DP[i-2]%1000000+DP[i-1]%1000000;
            DP[i]%=1000000;

        }else if(Buffer[i-1]==2)
        {
            if(Buffer[i]<=6) {
                DP[i] = DP[i - 2]%1000000 + DP[i - 1]%1000000;
            }else DP[i]=DP[i-1]%1000000;

            DP[i]%=1000000;
        }
        else{
            DP[i]=DP[i-1]%1000000;

            DP[i]%=1000000;
        }}}
    }
    cout<<DP[idx]%1000000;

    return 0;
}