//문제 2293 동전 1

//n가지 종류의 동전이 있다. 각각의 동전이 나타내는 가치는 다르다. 이 동전을 적당히 사용해서, 그 가치의 합이 k원이 되도록 하고 싶다. 그 경우의 수를 구하시오. 각각의 동전은 몇 개라도 사용할 수 있다.
//
//사용한 동전의 구성이 같은데, 순서만 다른 것은 같은 경우이다.
#include <iostream>
#include <algorithm>
using namespace std;

//n가지 동전가치로 k원을 만드는 경우의 수
// 동전은 무제한으로 사용가능.
// 순서만 다른것은 같은경우
// 이런 문제는 보통 금액을 기준으로 풀어야함
// knapsack 비슷한 문제인것 같기도하고
// 1원을 한가지, 두가지, 세가지 동전으로 만드는 경우
// 2원을 한가지, 두가지, 세가지 동전으로 만드는 경우
// 특정 동전의 갯수를 0으로 잡고 그 동전이 하나 하나 늘어날경우를 따지는 거는
// 동전의 구성이 중복될 일이 없다.

//DP[i][j] -> i원까지 j번째 가지의 동전으로 채우는 경우
// DP[i][j+1] = DP[i-coins[j]][j]랑 DP[coins[j][i+1]을 더하는 것
// DP[i+1][j] =
int DP[10001];

int main()
{
    int N,K;

    cin>>K;         //K 종류의 동전
    cin>>N;         //N 원

    int *coin = new int[K];

    for(int i=0;i<K;i++)
        cin>>coin[i];

    DP[0]=1;

    for(int j=0;j<K;j++)    //k번째 동전까지 사용해서 i원을 만들 수 있는 경우이다.
    {
        for(int i=1;i<=N;i++)
        {
            cout<<DP[i]<<" ? ";
            if(i>=coin[j])
            DP[i] += DP[i-coin[j]];

            cout<<DP[i]<<" ";
        }
    }

    cout<<DP[N];
    return 0;
}